{
  "version": 3,
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/api/_request.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.NEXT_PUBLIC_API_URL;\nconst getEvents = (data: any): Promise<any> => {\n  return axios\n    .post(`${API_URL}/event/filter-event`, data)\n    .then((response: any) => {\n      return response?.data;\n    });\n};\n\nexport { getEvents };\n"],"names":[],"mappings":";;;;;;AAEA,MAAM;AACN,MAAM,YAAY,CAAC;IACjB,OAAO,iJACJ,IAAI,CAAC,CAAC,EAAE,QAAQ,mBAAmB,CAAC,EAAE,MACtC,IAAI,CAAC,CAAC;QACL,OAAO,UAAU;IACnB;AACJ"}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/_components/home-page/HomePage.tsx"],"sourcesContent":["'use client';\nimport React, { useEffect, useState } from 'react';\nimport { getEvents } from '@/api/_request';\nimport dynamic from 'next/dynamic';\n\n// const UpcomingEvents = dynamic(() => import('./homeComponents/UpcomingEvents'));\nconst PopularEvents = dynamic(() => import('./homeComponents/PopularEvents'));\nconst PopularCategories = dynamic(\n  () => import('./homeComponents/PopularCategories')\n);\nconst HomePage = () => {\n  const [state, setState] = useState<any[]>([]);\n\n  useEffect(() => {\n    getEvents({}).then((response: any) => {\n      if (response?.statusCode === 200) {\n        const result = response?.data;\n        setState(result);\n      }\n    });\n  }, []);\n\n  return (\n    <main>\n      <PopularEvents events={state} />\n      {/* <UpcomingEvents /> */}\n      <PopularCategories />\n    </main>\n  );\n};\n\nexport default HomePage;\n"],"names":[],"mappings":";;;;;;;;AAAA;;;;;AAKA,mFAAmF;AACnF,MAAM,gBAAgB,2KAAQ,IAAM;;;;;;;AACpC,MAAM,oBAAoB,2KACxB,IAAM;;;;;;;AAER,MAAM,WAAW;IACf,MAAM,CAAC,OAAO,SAAS,GAAG,4NAAgB,EAAE;IAE5C,6NAAU;QACR,oIAAU,CAAC,GAAG,IAAI,CAAC,CAAC;YAClB,IAAI,UAAU,eAAe,KAAK;gBAChC,MAAM,SAAS,UAAU;gBACzB,SAAS;YACX;QACF;IACF,GAAG,EAAE;IAEL,qBACE,mPAAC;;0BACC,mPAAC;gBAAc,QAAQ;;;;;;0BAEvB,mPAAC;;;;;;;;;;;AAGP;uCAEe"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}